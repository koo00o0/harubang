/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-08-03 01:29:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.include;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class top_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
 	
	String id=(String)request.getSession().getAttribute("id"); 
	String email=(String)request.getSession().getAttribute("email"); 
	System.out.println(id+"fasfasfsafasfasf");

      out.write("\r\n");
      out.write("<title>하루방</title>\r\n");
      out.write("	<!-- HARUBNAG font link  --> \r\n");
      out.write("	<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Serif+KR:wght@200;300;400;500;600;700;900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("	<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/reset.css\" rel=\"stylesheet\"/>\r\n");
      out.write("	<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/top.css\" rel=\"stylesheet\"/>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- Top 로그인 메뉴바  -->\r\n");
      out.write("	<div class=\"top\">\r\n");
      out.write("        <div class=\"loginWrap\">\r\n");
      out.write("  		");
 if(id==null||id.equals("")){ 
      out.write(" 	\r\n");
      out.write("        	<!-- 로그인 전, 메뉴바  로그인 기능 추가 시 변경 바람 *-->\r\n");
      out.write("             <ul class=\"clearfix\">\r\n");
      out.write("                <li><a href=\"/user/login\">로그인</a></li>\r\n");
      out.write("                <li><a href=\"/user/join\">회원가입</a></li>\r\n");
      out.write("                <li><a href=\"/user/idFind\">아이디/비밀번호 찾기</a></li>\r\n");
      out.write("            </ul> \r\n");
      out.write("         	");
}else { 
      out.write("\r\n");
      out.write("            <!-- 로그인 후, 메뉴바  -->\r\n");
      out.write("            <div class=\"dropdownWrap\">\r\n");
      out.write("                <div class=\"imgWrap\">\r\n");
      out.write("                    <img src=\"/resources/images/icon/userB.png\" alt=\"\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"dropdown\">\r\n");
      out.write("                    <div class=\"dropbtn\">");
      out.print(id );
      out.write(" 님, 안녕하세요. ▼</div>\r\n");
      out.write("                    <div class=\"dropdown-content\">\r\n");
      out.write("                        <div class=\"userWrap\">\r\n");
      out.write("                            <img src=\"/resources/images/icon/profile-user.png\" alt=\"\">\r\n");
      out.write("                            <div class=\"userInfo\">\r\n");
      out.write("                                <h4>");
      out.print(id );
      out.write("</h4>\r\n");
      out.write("                                <p>");
      out.print(email );
      out.write("</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("					<form action=\"/logout\" method=\"POST\">\r\n");
      out.write("                        <div class=\"buttonWrap\">\r\n");
      out.write("                            <input type=\"button\" name=\"\" id=\"\" value=\"마이페이지\" onClick=\"location.href='/user/mypage'\">\r\n");
      out.write("							<input  type=\"submit\" value=\"로그아웃\"  onclick=\"\">\r\n");
      out.write("                       	</div>\r\n");
      out.write("					</form>	\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>  \r\n");
      out.write("            </div>\r\n");
      out.write("            ");
} 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("       \r\n");
      out.write("		<!-- 상단 메뉴바 -->\r\n");
      out.write("        <div class=\"navWrap clearfix\">\r\n");
      out.write("            <h1><a href=\"/\"><img class=\"logo\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/logo/logo.png\" alt=\"logo\"></a></h1>\r\n");
      out.write("            <nav class=\"gnb\">\r\n");
      out.write("                <ul class=\"clearfix\">\r\n");
      out.write("                    <li><a href=\"/info/infoList\">제주여행</a></li>\r\n");
      out.write("                    <li><a href=\"/schedule/schedule\">나의여행</a></li>\r\n");
      out.write("                    <li><a href=\"/getList\">구경하기</a></li>\r\n");
      out.write("                    <li><a href=\"/board/getBoardList\">게시판</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </nav>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
