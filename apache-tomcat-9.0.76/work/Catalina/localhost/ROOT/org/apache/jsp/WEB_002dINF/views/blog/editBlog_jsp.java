/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-08-03 00:48:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.blog;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class editBlog_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1682261928999L));
    _jspx_dependants.put("jar:file:/C:/Users/ehdrm/Desktop/harubangP%20(4)/harubangP/apache-tomcat-9.0.76/wtpwebapps/harubang/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 	
	String id =(String)request.getSession().getAttribute("id"); 
	String name =(String)request.getSession().getAttribute("name");
	String title = (String)request.getSession().getAttribute("title");

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>블로그 수정하기</title>\r\n");
      out.write("	<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js\" integrity=\"sha512-3gJwYpMe3QewGELv8k/BX9vcqhryRdzRMxVfq6ngyWXwo03GFEzjsUm8Q7RZcHPHksttq7/GFoxjCVUjkjvPdw==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\r\n");
      out.write("	<script src=\"//cdn.ckeditor.com/4.22.1/standard/ckeditor.js\"></script>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"../../../resources/ckeditor/contents.css\">\r\n");
      out.write("	<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("	    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.css\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.js\"></script>\r\n");
      out.write("	<meta charset=\"UTF-8\" />\r\n");
      out.write("	<script type=\"text/javascript\" src=\"../../../resources/ckeditor/ckeditor.js\"></script>\r\n");
      out.write("	    <style>\r\n");
      out.write("        .logo{\r\n");
      out.write("        	margin-top:20px;\r\n");
      out.write("            width:230px;\r\n");
      out.write("            height:100%;\r\n");
      out.write("        }\r\n");
      out.write("        .title{\r\n");
      out.write("            width:100%;\r\n");
      out.write("            height:100px;\r\n");
      out.write("        }\r\n");
      out.write("        .writer{\r\n");
      out.write("            position:absolute;\r\n");
      out.write("            top:170px;\r\n");
      out.write("            right:30px;\r\n");
      out.write("            width:300px;\r\n");
      out.write("            z-index: 9999;\r\n");
      out.write("            display : flex;\r\n");
      out.write("            gap : 10px;\r\n");
      out.write("            justify-content : flex-end;\r\n");
      out.write("        }\r\n");
      out.write("        .topClass{\r\n");
      out.write("        position: relative;\r\n");
      out.write("        }\r\n");
      out.write("        * {\r\n");
      out.write("		  margin: 0;\r\n");
      out.write("		  padding: 0;\r\n");
      out.write("		  box-sizing: border-box;\r\n");
      out.write("		}\r\n");
      out.write("		.topClass {\r\n");
      out.write("		  position: relative;\r\n");
      out.write("		  width: 100%;\r\n");
      out.write("		  margin-top: 45px;\r\n");
      out.write("		}\r\n");
      out.write("		input {\r\n");
      out.write("		  font-size: 15px;\r\n");
      out.write("		  color: #222222;\r\n");
      out.write("		  width: 100%;\r\n");
      out.write("		  border: none;\r\n");
      out.write("		  border-bottom: solid #aaaaaa 1px;\r\n");
      out.write("		  padding-bottom: 10px;\r\n");
      out.write("		  padding-left: 10px;\r\n");
      out.write("		  position: relative;\r\n");
      out.write("		  background: none;\r\n");
      out.write("		  z-index: 5;\r\n");
      out.write("		}\r\n");
      out.write("		input::placeholder { color: #aaaaaa; }\r\n");
      out.write("		input:focus { outline: none; }		\r\n");
      out.write("		span {\r\n");
      out.write("		  display: block;\r\n");
      out.write("		  position: absolute;\r\n");
      out.write("		  bottom: 0;\r\n");
      out.write("		  left: 0%;  /* right로만 바꿔주면 오 - 왼 */\r\n");
      out.write("		  background-color: #666;\r\n");
      out.write("		  width: 0;\r\n");
      out.write("		  height: 2px;\r\n");
      out.write("		  border-radius: 2px;\r\n");
      out.write("		  transition: 0.5s;\r\n");
      out.write("		}\r\n");
      out.write("		label {\r\n");
      out.write("		  position: absolute;\r\n");
      out.write("		  color: #aaa;\r\n");
      out.write("		  left: 10px;\r\n");
      out.write("		  font-size: 20px;\r\n");
      out.write("		  bottom: 8px;\r\n");
      out.write("		  transition: all .2s;\r\n");
      out.write("		}\r\n");
      out.write("		input:focus ~ label, input:valid ~ label {\r\n");
      out.write("		  font-size: 16px;\r\n");
      out.write("		  bottom: 40px;\r\n");
      out.write("		  color: #666;\r\n");
      out.write("		  font-weight: bold;\r\n");
      out.write("		}\r\n");
      out.write("		input:focus ~ span, input:valid ~ span {\r\n");
      out.write("		  width: 100%;\r\n");
      out.write("		}\r\n");
      out.write("		.insertBtn{\r\n");
      out.write("			position : absolute;\r\n");
      out.write("			top : 50px;\r\n");
      out.write("			right : 20px;\r\n");
      out.write("			z-index : 99999;\r\n");
      out.write("			width : 80px;\r\n");
      out.write("			color:#444;\r\n");
      out.write("			font-weight:bold;\r\n");
      out.write("			border : 2px solid #ddd;\r\n");
      out.write("			border-radius : 10px;\r\n");
      out.write("			cursor : pointer;\r\n");
      out.write("			transition : 0.4s;\r\n");
      out.write("			text-align : center;\r\n");
      out.write("			height : 40px;\r\n");
      out.write("			line-height : 40px;\r\n");
      out.write("			padding : 0!important;\r\n");
      out.write("		}\r\n");
      out.write("		.insertBtn:hover{\r\n");
      out.write("			background-color : #8bb6bc;\r\n");
      out.write("			color : white;\r\n");
      out.write("			font-weight : bold;\r\n");
      out.write("			border:none;\r\n");
      out.write("		}\r\n");
      out.write("		button {\r\n");
      out.write("    		margin: 20px;\r\n");
      out.write("        	right:30px;\r\n");
      out.write("        	position:absolute;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		.w-btn {\r\n");
      out.write("		    border: none;\r\n");
      out.write("		    display: inline-block;\r\n");
      out.write("		    padding: 15px 30px;\r\n");
      out.write("		    border-radius: 15px;\r\n");
      out.write("		    font-family: \"paybooc-Light\", sans-serif;\r\n");
      out.write("	  	 	box-shadow: 0px -1px 5px 0px;\r\n");
      out.write("		    text-decoration: none;\r\n");
      out.write("		    font-weight: 600;\r\n");
      out.write("		    transition: 0.25s;\r\n");
      out.write("		    margin-top:55px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.w-btn-outline {\r\n");
      out.write("		    position: relative;\r\n");
      out.write("		    padding: 15px 30px;\r\n");
      out.write("		    border-radius: 15px;\r\n");
      out.write("		    font-family: \"paybooc-Light\", sans-serif;\r\n");
      out.write("		    text-decoration: none;\r\n");
      out.write("		    font-weight: 600;\r\n");
      out.write("		    transition: 0.25s;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.w-btn-indigo {\r\n");
      out.write("		    background-color: aliceblue;\r\n");
      out.write("		    color: #1e6b7a;\r\n");
      out.write("		}\r\n");
      out.write("    </style>\r\n");
      out.write("	<script>\r\n");
      out.write("	$(function(){\r\n");
      out.write("		getCon();\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	function checkWrite(){\r\n");
      out.write("			if ($(\"#title\").val()==\"\"){\r\n");
      out.write("				alert(\"제목을 입력해주세요.\");\r\n");
      out.write("				$(\"#title\").focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			var a = CKEDITOR.instances.ckeditor.getData();\r\n");
      out.write("			$(\"#bcontent\").val(a)\r\n");
      out.write("			document.getElementById(\"blogForm\").submit();\r\n");
      out.write("			alert(\"저장에 성공했습니다.\");\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function getCon(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			dataType : \"text\",\r\n");
      out.write("			type : \"POST\",\r\n");
      out.write("			url : \"/editB\",\r\n");
      out.write("			data : {\r\n");
      out.write("				\"seq\" : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.getSeq()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("			},success : function(result) { \r\n");
      out.write("				var obj = result.split(\"^\");\r\n");
      out.write("				CKEDITOR.instances.ckeditor.setData(obj[0]);\r\n");
      out.write("				$('#blogContent').val(obj[0]);\r\n");
      out.write("				$('#title').val(obj[1]);\r\n");
      out.write("				$('#userId').text(obj[2]);\r\n");
      out.write("				$('#resultSeq').val(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.getSeq()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	$(function(){\r\n");
      out.write("		CKEDITOR.replace( 'ckeditor', {//해당 이름으로 된 textarea에 에디터를 적용\r\n");
      out.write("	         width:'100%',\r\n");
      out.write("	         height:'400px',\r\n");
      out.write("	         uiColor: '#CCEAEE',\r\n");
      out.write("	         filebrowserUploadUrl: \"fileupload.do\"\r\n");
      out.write("	    });\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div style='display:none' id='bobobo'></div>\r\n");
      out.write("<img class=\"logo\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/noticeimg/logo.png\" alt=\"하루방\">\r\n");
      out.write("<form action=\"/updateBlog\" method=\"post\" id=\"blogForm\">\r\n");
      out.write("	<div class=\"topClass\">\r\n");
      out.write("	<input id=\"title\" name=\"title\" type=\"text\" required><label>제목</label><span></span>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"writer\">\r\n");
      out.write("		<div>Writer</div>\r\n");
      out.write("		<div id='userId'></div>\r\n");
      out.write("		<input type=\"hidden\" value=\"");
      out.print(id);
      out.write("\" name=\"id\">\r\n");
      out.write("	</div>\r\n");
      out.write("          <div class=\"mb-3\">\r\n");
      out.write("          <textarea class=\"form-control blogContent\" name=\"freeboard_content\" id=\"ckeditor\" rows=\"6\"></textarea>\r\n");
      out.write("            <input type=\"hidden\" value=\"\" name=\"bcontent\" id='bcontent'>\r\n");
      out.write("            <input type=\"hidden\" value=\"\" name=\"seq\" id='resultSeq'>\r\n");
      out.write("     	  </div>\r\n");
      out.write("    <div style = \"width:700px; text-align:right;\">\r\n");
      out.write("    <input type=\"button\" id=\"ckeditor\" class='insertBtn w-btn w-btn-indigo' name=\"ckeditor\" value=\"저장\" onclick=\"checkWrite()\">\r\n");
      out.write("</div>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
