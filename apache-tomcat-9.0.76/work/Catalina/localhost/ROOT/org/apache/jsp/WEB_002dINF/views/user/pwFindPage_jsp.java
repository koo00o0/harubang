/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-08-02 09:06:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.project.harubang.user.UserVO;

public final class pwFindPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1682261928999L));
    _jspx_dependants.put("jar:file:/C:/Users/ehdrm/Desktop/harubangP%20(4)/harubangP/apache-tomcat-9.0.76/wtpwebapps/harubang/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.project.harubang.user.UserVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.css\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.js\"></script>\r\n");
      out.write("<script \r\n");
      out.write("src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.min.js\"\r\n");
      out.write("integrity=\"sha512-pumBsjNRGGqkPzKHndZMaAG+bir374sORyzM3uulLV14lN5LyykqNk8eEeUlUkB3U0M4FApyaHraT65ihJhDpQ==\"\r\n");
      out.write("crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\r\n");
 
	UserVO vo=(UserVO)request.getSession().getAttribute("result");
	String id=(String)request.getSession().getAttribute("id");
	String pw=(String)request.getSession().getAttribute("pw");

	System.out.println(id);

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background-color: #f1f1f1;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            height: 100vh;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            width: 300px;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"hidden\"] {\r\n");
      out.write("            display: none; /* Hide the hidden input field */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        label {\r\n");
      out.write("            display: block;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"password\"] {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"button\"] {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            background-color: #EEC06C;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"button\"]:hover {\r\n");
      out.write("            background-color: #cea65d;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .Mas{\r\n");
      out.write("           font-size: 12px;\r\n");
      out.write("           color: red;\r\n");
      out.write("        }\r\n");
      out.write("        .logo{\r\n");
      out.write("            width:300px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("            margin-bottom:35px;\r\n");
      out.write("            padding-left:20px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("const Toast = Swal.mixin({\r\n");
      out.write("    toast: true,\r\n");
      out.write("    position: 'center-center',\r\n");
      out.write("    showConfirmButton: false,\r\n");
      out.write("    timer: 1200,\r\n");
      out.write("    timerProgressBar: true,\r\n");
      out.write("    didOpen: (toast) => {\r\n");
      out.write("        /* toast.addEventListener('mouseenter', Swal.stopTimer); */\r\n");
      out.write("        toast.addEventListener('mouseleave', Swal.resumeTimer);\r\n");
      out.write("    },\r\n");
      out.write("    willClose: () => {\r\n");
      out.write("        setTimeout(() => {\r\n");
      out.write("            location.href = \"/user/login\";\r\n");
      out.write("        }, 300);\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   function pwFind() {   \r\n");
      out.write("      if ($(\"#pw\").val() == \"\") {\r\n");
      out.write("         var pwMs=\"\";\r\n");
      out.write("         pwMs = \"<p class='Mas'>* 비밀번호를 입력해주세요. </p>\"\r\n");
      out.write("         $(\".pwMass\").html(pwMs);\r\n");
      out.write("         $(\"#pw\").focus();\r\n");
      out.write("         return;\r\n");
      out.write("      }\r\n");
      out.write("      if ($(\"#pw2\").val() == \"\") {\r\n");
      out.write("         var pw2Ms=\"\";\r\n");
      out.write("         pw2Ms = \"<p class='Mas'>* 비밀번호를 입력해주세요. </p>\"\r\n");
      out.write("         $(\".pw2Mass\").html(pw2Ms);\r\n");
      out.write("         $(\"#pw2\").focus();\r\n");
      out.write("         return;\r\n");
      out.write("      }\r\n");
      out.write("      if ($(\"#pw\").val() != $(\"#pw2\").val()) {\r\n");
      out.write("         var pw3Ms=\"\";\r\n");
      out.write("         pw3Ms = \"<p class='Mas'>* 비밀번호가 서로 다릅니다.</p>\"\r\n");
      out.write("         $(\".pw3Mass\").html(pw3Ms);\r\n");
      out.write("         $(\"#pw\").focus();\r\n");
      out.write("         return;\r\n");
      out.write("      }\r\n");
      out.write("      if ($(\"#pw\").val() == ");
      out.print(pw);
      out.write(") {\r\n");
      out.write("         var pw4Ms=\"\";\r\n");
      out.write("         pw4Ms = \"<p class='Mas'>* 사용자 비밀번호와 일치합니다.</p>\"\r\n");
      out.write("         $(\".pw4Mass\").html(pw4Ms);\r\n");
      out.write("         $(\"#pw\").focus();\r\n");
      out.write("         return;\r\n");
      out.write("      }\r\n");
      out.write("      $.ajax({\r\n");
      out.write("         dataType : \"text\",\r\n");
      out.write("         type : \"POST\",\r\n");
      out.write("         url : \"/pwFindChange\",\r\n");
      out.write("         data:{\r\n");
      out.write("            \"pw\" : $(\"#pw\").val()\r\n");
      out.write("         },\r\n");
      out.write("         success : function(result) {\r\n");
      out.write("            if (result == \"T\") {\r\n");
      out.write("               Toast.fire({\r\n");
      out.write("                   icon: 'success',\r\n");
      out.write("                   title: '비밀번호 변경을 성공했습니다.'\r\n");
      out.write("               })\r\n");
      out.write("            } else {\r\n");
      out.write("               alert(\"비밀번호 변경 실패..\");\r\n");
      out.write("            }\r\n");
      out.write("         },\r\n");
      out.write("         error : function(e) {\r\n");
      out.write("            alert(e);\r\n");
      out.write("         }\r\n");
      out.write("      })\r\n");
      out.write("   }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"contain\">\r\n");
      out.write("        <div class=\"logos\">\r\n");
      out.write("            <a href=\"/user/login\"><img src=\"/resources/images/logo/logo.png\" alt=\"\" class=\"logo\"></a>\r\n");
      out.write("        </div>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <input type=\"hidden\" name=\"id\"> <br/>\r\n");
      out.write("        <label for=\"pw\">새 비밀번호 :</label>\r\n");
      out.write("        <input type=\"password\" id=\"pw\" name=\"pw\" placeholder=\"새로운 비밀번호 입력\"><br/>\r\n");
      out.write("        <label for=\"pw2\">새 비밀번호 확인 :</label>\r\n");
      out.write("        <input type=\"password\" id=\"pw2\" name=\"pw2\" placeholder=\"새로운 비밀번호 확인\"><br/>\r\n");
      out.write("        <div class=\"pwMass pw2Mass pw3Mass pw4Mass\"></div>\r\n");
      out.write("        <input type=\"button\" value=\"변경\" onclick=\"pwFind()\">\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
