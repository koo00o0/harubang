/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-08-03 00:30:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.schedule;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.awt.SystemColor;
import java.util.ArrayList;
import com.project.harubang.schedule.scheduleResultVO;

public final class makeSchedule_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1682261928999L));
    _jspx_dependants.put("jar:file:/C:/Users/ehdrm/Desktop/harubangP%20(4)/harubangP/apache-tomcat-9.0.76/wtpwebapps/harubang/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.project.harubang.schedule.scheduleResultVO");
    _jspx_imports_classes.add("java.awt.SystemColor");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	ArrayList<scheduleResultVO> schedulelist = (ArrayList<scheduleResultVO>)request.getAttribute("scheduleList");

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>하루방</title>\r\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/daterangepicker.css\" />\r\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/makeschedule.css\" />\r\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/my_schedule_modal.css\" />\r\n");
      out.write("	<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/schedule_jquery.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/moment.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/daterangepicker.min.js\"></script>\r\n");
      out.write("    <script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script>\r\n");
      out.write(" \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	 ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/include/subtop.jsp", out, false);
      out.write("<section class=\"sectionWrap\">\r\n");
      out.write("        <div class=\"itemWrap\">\r\n");
      out.write("            <div class=\"scheduleWrap\">\r\n");
      out.write("                <h3>일정명</h3>\r\n");
      out.write("                <input class=\"schedulenameInput\" type=\"text\" placeholder=\"일정명을 입력하세요.\"/>\r\n");
      out.write("             <!--    <p>* 일정명이 중복됐습니다. 다시 입력해주세요.</p> -->\r\n");
      out.write("                <h3>날짜선택</h3>\r\n");
      out.write("                <input type=\"text\" name=\"daterange\" placeholder=\"2023.08.26-2023.09.26\" readonly />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"textWrap\">상세 설정</div>\r\n");
      out.write("            <div class=\"selectWrap\">\r\n");
      out.write("                <select class=\"form-select\">\r\n");
      out.write("                    <option selected>Open this select date</option>\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"menuWrap\">\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li class=\"active\">호텔</li>\r\n");
      out.write("                    <li>장소</li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"scrollWrapAdd\">\r\n");
      out.write("            	<!-- 일정 추가 시 추가됨 -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"mapWrap\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"infoWrap\">\r\n");
      out.write("            <div class=\"searchWrap\">\r\n");
      out.write("                <input class=\"searchInput\" type=\"text\">\r\n");
      out.write("                <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/icon/search_org.png\" alt=\"\" onclick=\"searchKeyWord()\">\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"menuWrap\">\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li class=\"active\">호텔</li>\r\n");
      out.write("                    <li>장소</li>\r\n");
      out.write("                    <li>찜목록</li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"scrollWrap\">\r\n");
      out.write("            	");
 for (int i = 0 ; i < schedulelist.size(); i++){ 
            			scheduleResultVO scheduleinfo = schedulelist.get(i);
						String newSrcFile = "/resources/images/info/" + scheduleinfo.getScheduleDTO().getSort() + "/" + scheduleinfo.getScheduleDTO().getImgfile();
						/* String newAddress = info.getInfoAddressDTO().getAddressName(); */
						String[] newAddress = scheduleinfo.getScheduleAddressDTO().getAddressName().split(" ");
						String newAddressName = newAddress[0] + " " + newAddress[1];
						String ItemID = scheduleinfo.getScheduleDTO().getItemId();
						String ItemName = scheduleinfo.getScheduleDTO().getItemName();
				
      out.write("<div id=\"");
      out.print(ItemID);
      out.write("\" class=\"scrollItem\" data-filter=\"");
      out.print( scheduleinfo.getScheduleDTO().getSort() );
      out.write("\" onclick=\"showMap(this.id)\">\r\n");
      out.write("                    <div class=\"imgItem\">\r\n");
      out.write("                        <img src=\"");
      out.print(newSrcFile );
      out.write("\" alt=\"\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"textItem\">\r\n");
      out.write("                        <h4>");
      out.print( ItemName );
      out.write("</h4>\r\n");
      out.write("                        <p>");
      out.print(newAddressName );
      out.write("</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"add\">\r\n");
      out.write("                        <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/icon/plus.png\" alt=\"\" onclick=\"clickAddSchedule('");
      out.print(ItemID);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print( ItemName );
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print( newSrcFile );
      out.write("')\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");
} 
      out.write("</div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("    \r\n");
      out.write("    <div id=\"modal\" class=\"addScheduleWrap\">\r\n");
      out.write("        <div class=\"addScheduleBox\">\r\n");
      out.write("            <div class=\"imageWrap\">\r\n");
      out.write("                <img src=\"\" alt=\"\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"textWrap\">\r\n");
      out.write("                <div class=\"placeWrap\">\r\n");
      out.write("                    <p>장소명</p>\r\n");
      out.write("                    <input type=\"text\" class=\"place\" readonly>\r\n");
      out.write("                    <input type=\"hidden\" class=\"ItemId\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"dateWrap\">\r\n");
      out.write("                    <p>날짜</p>\r\n");
      out.write("                    <input type=\"text\" class=\"date\" readonly>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"timeWrap\">\r\n");
      out.write("                    <div class=\"startWrap\">\r\n");
      out.write("                        <p>시작 시간</p>\r\n");
      out.write("                        <input type=\"time\" class=\"startTime\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"endWrap\">\r\n");
      out.write("                        <p>종료 시간</p>\r\n");
      out.write("                        <input type=\"time\" class=\"endTime\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"buttonWrap\">\r\n");
      out.write("               <!--  <input type=\"button\" value=\"확인\" class=\"saveButton\" onclick=\"addSchedultItem()\">\r\n");
      out.write("                <input type=\"button\" value=\"취소\" class=\"cancelButton\" onclick=\"cancelButton()\"> -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=69c2dceabcf2a41c9aab2dff8c9b5944\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/schedule_menu.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/my_schedule_modal.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/my_schedule_add.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("	/* 지도 초기 화면 설정 */\r\n");
      out.write("    var mapContainer = document.getElementsByClassName('mapWrap')[0], // 지도를 표시할 div \r\n");
      out.write("    	mapOption = { \r\n");
      out.write("        center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n");
      out.write("        level: 3 // 지도의 확대 레벨\r\n");
      out.write("    };\r\n");
      out.write("	\r\n");
      out.write("	var map = new kakao.maps.Map(mapContainer, mapOption);\r\n");
      out.write("	\r\n");
      out.write("	var markerPosition  = new kakao.maps.LatLng(33.450701, 126.570667); \r\n");
      out.write("\r\n");
      out.write("	// 마커를 생성합니다\r\n");
      out.write("	var marker = new kakao.maps.Marker({\r\n");
      out.write("	    position: markerPosition\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	// 마커가 지도 위에 표시되도록 설정합니다\r\n");
      out.write("	marker.setMap(map);\r\n");
      out.write("	\r\n");
      out.write("	/* 지도 */\r\n");
      out.write("	function showMap(id){\r\n");
      out.write("		\r\n");
      out.write("		var container = document.getElementsByClassName('mapWrap')[0];\r\n");
      out.write("		$.ajax({\r\n");
      out.write("	    	dataType: 'json',\r\n");
      out.write("	    	type:\"POST\",\r\n");
      out.write("	    	url:\"/schedule/showMapValue\",\r\n");
      out.write("	    	data: {\r\n");
      out.write("	    		\"id\" : id,\r\n");
      out.write("	    	},\r\n");
      out.write("	    	success : function(result){\r\n");
      out.write("	    		var latitude = result[0].scheduleAddressDTO.latitude;\r\n");
      out.write("	    		var longitude = result[0].scheduleAddressDTO.longitude;\r\n");
      out.write("	    		 	var options = {\r\n");
      out.write("    		        center: new kakao.maps.LatLng(latitude, longitude),\r\n");
      out.write("	    		        level: 3\r\n");
      out.write("	    		};\r\n");
      out.write("	    		 \r\n");
      out.write("	    		 var map = new kakao.maps.Map(container, options); \r\n");
      out.write("	    		 \r\n");
      out.write("	    		 var markerPosition  = new kakao.maps.LatLng(latitude, longitude); \r\n");
      out.write("\r\n");
      out.write("	    			// 마커를 생성합니다\r\n");
      out.write("	    			var marker = new kakao.maps.Marker({\r\n");
      out.write("	    			    position: markerPosition\r\n");
      out.write("	    			});\r\n");
      out.write("\r\n");
      out.write("	    			// 마커가 지도 위에 표시되도록 설정합니다\r\n");
      out.write("	    			marker.setMap(map);\r\n");
      out.write("	    	}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("		\r\n");
      out.write("	/* 정보 검색 기능 */\r\n");
      out.write("	function searchKeyWord(){\r\n");
      out.write("		var keyword = $('.searchInput').val();\r\n");
      out.write("		console.log(keyword);\r\n");
      out.write("		$.ajax({\r\n");
      out.write("	    	dataType: 'json',\r\n");
      out.write("	    	type:\"POST\",\r\n");
      out.write("	    	url:\"/schedule/searchKeyWord\",\r\n");
      out.write("	    	data: {\r\n");
      out.write("	    		\"keyword\" : keyword,\r\n");
      out.write("	    	},\r\n");
      out.write("	    	success : function(searchResult){\r\n");
      out.write("	    		/* console.log(searchResult); */\r\n");
      out.write("	    		 $('.infoWrap .scrollWrap .scrollItem').css('display', 'none');\r\n");
      out.write("	    		 $('.infoWrap .menuWrap ul li').removeClass( 'active' );\r\n");
      out.write("	    		 \r\n");
      out.write("	    		 var imgname;\r\n");
      out.write("	    		 var addressName = [];\r\n");
      out.write("	    		 var newAddress;\r\n");
      out.write("	    		 var innerHtml = \"\";\r\n");
      out.write("	    		 var ItemID;\r\n");
      out.write("	    		 var ItemName;\r\n");
      out.write("	    		 for(var i = 0; i < searchResult.length; i++){\r\n");
      out.write("	    			 imgname = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/info/\" + searchResult[i].scheduleDTO.sort + \"/\" + searchResult[i].scheduleDTO.imgfile;\r\n");
      out.write("	    			 addressName = searchResult[i].scheduleAddressDTO.addressName.split(\" \");\r\n");
      out.write("	    			 newAddress = addressName[0] + \" \" + addressName[1];\r\n");
      out.write("	    			 ItemID = searchResult[i].scheduleDTO.itemId;\r\n");
      out.write("	    			 ItemName = searchResult[i].scheduleDTO.itemName;\r\n");
      out.write("\r\n");
      out.write("	    			 innerHtml += '<div id=\"' + ItemID + '\" class=\"scrollAllItem\" data-filter=\"' + searchResult[i].scheduleDTO.sort + '\" onclick=\"showMap(this.id)\">';\r\n");
      out.write("	    		     innerHtml += '<div class=\"imgItem\">';\r\n");
      out.write("	                 innerHtml += '<img src=\"'+ imgname + '\"alt=\"\">';\r\n");
      out.write("	                 innerHtml += '</div>';\r\n");
      out.write("	                 innerHtml += '<div class=\"textItem\">';\r\n");
      out.write("	                 innerHtml += '<h4>' + ItemName + '</h4>';\r\n");
      out.write("	                 innerHtml += '<p>' + newAddress + '</p>';\r\n");
      out.write("	                 innerHtml += '</div>';\r\n");
      out.write("	                 innerHtml += '<div class=\"add\">';\r\n");
      out.write("	                 innerHtml += '<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/icon/plus.png\" alt=\"\" onclick=\"clickAddSchedule(\\'' + ItemID + '\\',\\'' + ItemName +'\\',\\''+ imgname +'\\')\">';\r\n");
      out.write("	                 innerHtml += '</div>';\r\n");
      out.write("	                 innerHtml += '</div>';\r\n");
      out.write("	                 $(\".infoWrap .scrollWrap\").html(innerHtml);\r\n");
      out.write("	   \r\n");
      out.write("	    		 }\r\n");
      out.write("	    	}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("    $(\".itemWrap .menuWrap ul li\").on(\"click\", function(){\r\n");
      out.write("        $(\".itemWrap .menuWrap ul li\").removeClass(\"active\");\r\n");
      out.write("        $(this).addClass(\"active\");\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    var date = [];\r\n");
      out.write("    $(function() {\r\n");
      out.write("        $('input[name=\"daterange\"]').daterangepicker({\r\n");
      out.write("            opens: 'left'\r\n");
      out.write("        }, function(start, end, label) {\r\n");
      out.write("        	getDatesStartToLast(start.format('YYYY-MM-DD'), end.format('YYYY-MM-DD'));\r\n");
      out.write("            console.log(\"A new date selection was made: \" + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    function getDatesStartToLast(startDate, lastDate) {\r\n");
      out.write("    	var regex = RegExp(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/);\r\n");
      out.write("    	if(!(regex.test(startDate) && regex.test(lastDate))) return \"Not Date Format\";\r\n");
      out.write("    	var result = [];\r\n");
      out.write("    	var curDate = new Date(startDate);\r\n");
      out.write("    	while(curDate <= new Date(lastDate)) {\r\n");
      out.write("    		result.push(curDate.toISOString().split(\"T\")[0]);\r\n");
      out.write("    		curDate.setDate(curDate.getDate() + 1);\r\n");
      out.write("    	}\r\n");
      out.write("    	changeSelectItem(result);\r\n");
      out.write("    	return result;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function changeSelectItem(dateArr){\r\n");
      out.write("    	$('.form-select').children('option:not(:first)').remove();\r\n");
      out.write("    	for(var count = 0; count < dateArr.length; count++){      \r\n");
      out.write("            var option = \"<option>\"+dateArr[count]+\"</option>\";\r\n");
      out.write("            $('.form-select').append(option);\r\n");
      out.write("        } \r\n");
      out.write("    }\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
