/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-08-01 19:18:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.project.harubang.user.UserVO;

public final class idFindPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1682261928999L));
    _jspx_dependants.put("jar:file:/C:/Users/ehdrm/Desktop/harubangP%20(4)/harubangP/apache-tomcat-9.0.76/wtpwebapps/harubang/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.project.harubang.user.UserVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<script \r\n");
      out.write("src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.min.js\"\r\n");
      out.write("integrity=\"sha512-pumBsjNRGGqkPzKHndZMaAG+bir374sORyzM3uulLV14lN5LyykqNk8eEeUlUkB3U0M4FApyaHraT65ihJhDpQ==\"\r\n");
      out.write("crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Serif+KR:wght@200;300;400;500;600;700;900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("    .findId { \r\n");
      out.write("      width: 400px;\r\n");
      out.write("      margin: 0 auto;\r\n");
      out.write("      padding: 20px;\r\n");
      out.write("      display: flex;\r\n");
      out.write("      flex-direction: column;\r\n");
      out.write("      justify-content: center;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("      font-family: 'Noto Serif KR', serif;\r\n");
      out.write("      margin-top:40px;\r\n");
      out.write("    }\r\n");
      out.write("    .findId h3 { \r\n");
      out.write("      margin:0 0 15px 0;\r\n");
      out.write("      font-size:30px;\r\n");
      out.write("      font-family: 'Noto Serif KR', serif;\r\n");
      out.write("    }\r\n");
      out.write("    .findId .desc { \r\n");
      out.write("      margin:0 0 30px;\r\n");
      out.write("      font-size:18px;\r\n");
      out.write("      color:#008bcc;\r\n");
      out.write("      font-weight:bold;\r\n");
      out.write("      font-family: 'Noto Serif KR', serif;\r\n");
      out.write("    }\r\n");
      out.write("    .findId .memberInfo {\r\n");
      out.write("      overflow:hidden;\r\n");
      out.write("      border:1px solid #d6d4d4;\r\n");
      out.write("      text-align:left;\r\n");
      out.write("      font-family: 'Noto Serif KR', serif;\r\n");
      out.write("    }\r\n");
      out.write("    .findId .memberInfo .info {\r\n");
      out.write("      padding: 35px 60px 20px 60px;\r\n");
      out.write("    }\r\n");
      out.write("    .findId .memberInfo .info span {\r\n");
      out.write("      color:#008bcc;\r\n");
      out.write("      font-family: 'Noto Serif KR', serif;\r\n");
      out.write("      font-weight:bold;\r\n");
      out.write("    }\r\n");
      out.write("    .findId .memberInfo .thumb {\r\n");
      out.write("      float:left;\r\n");
      out.write("      padding:10px;\r\n");
      out.write("      font-family: 'Noto Serif KR', serif;\r\n");
      out.write("    }\r\n");
      out.write("    .findId .copy {\r\n");
      out.write("      margin:40px 0 0;\r\n");
      out.write("      color:#757575;\r\n");
      out.write("      font-family: 'Noto Serif KR', serif;\r\n");
      out.write("    }\r\n");
      out.write("    .findId .button {\r\n");
      out.write("      margin:30px 0 0;\r\n");
      out.write("      }\r\n");
      out.write("      .thumb{\r\n");
      out.write("        width:400px;\r\n");
      out.write("        margin:0 auto;\r\n");
      out.write("        font-family: 'Noto Serif KR', serif;\r\n");
      out.write("      }\r\n");
      out.write("    .img{\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: center;\r\n");
      out.write("      width:120px;\r\n");
      out.write("      height:110px;\r\n");
      out.write("      margin:0 auto;\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("    .button .login{\r\n");
      out.write("      width:110px;\r\n");
      out.write("      height:35px;\r\n");
      out.write("      padding-right:10px;\r\n");
      out.write("    }\r\n");
      out.write("    .button .password{\r\n");
      out.write("      width:130px;\r\n");
      out.write("      height:35px;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div> </div>\r\n");
      out.write("<div module=\"member_findidresult\">\r\n");
      out.write("  <div class=\"findId\">\r\n");
      out.write("      <h3>아이디 찾기</h3>\r\n");
      out.write("      <p class=\"desc\">회원님 아이디 찾기가 완료 되었습니다.</p>\r\n");
      out.write("      <div class=\"memberInfo\">\r\n");
      out.write("          <p class=\"thumb\">\r\n");
      out.write("            <img class=\"img\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/icon/find_id.png\" alt=\"\" /></p>\r\n");
      out.write("      		<p class=\"info\">저희 홈페이지를 이용해주셔서 감사합니다.<br />다음정보로 가입된 아이디는 <span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>입니다.</p>\r\n");
      out.write("      </div>\r\n");
      out.write("      <p class=\"copy\">\r\n");
      out.write("	          회원님의 아이디 찾기가 성공적으로 이루어졌습니다.<br />\r\n");
      out.write("	          회원님의 즐겁고 편리한 여행을 위해서 저희 홈페이지는 항상 최선의 노력을 다하겠습니다.\r\n");
      out.write("      </p>\r\n");
      out.write("      <p class=\"button\">\r\n");
      out.write("          <a href=\"/user/login\"><img class=\"login\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/icon/login_button.png\" alt=\"로그인\" /></a>\r\n");
      out.write("          <a href=\"/user/pwFind\"><img class=\"password\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/icon/find_password_button.png\" alt=\"비밀번호 찾기\" /></a>\r\n");
      out.write("      </p>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
